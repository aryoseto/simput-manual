{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SimplyOutput","text":"<p>SimplyOutput is a lightweight utility tool for structural engineers in extracting output files generated by structural analysis softwares, into simple flat table format in excel format. Making the output easier for the engineers to further process it (e.g., sort, pivot, finding max min, grouping, even putting it neatly in the report). Mainly used to accompany structural analysis software such as Bentley's SACS and DNV's SESAM packages. </p> <p>Some of the key features are:</p> <ul> <li>Easy to Use: Simply command line interface (CLI). Can be written as a batch file, and tied to the structural analysis run stream. </li> <li>Flat Table: Everything is converted into excel flat table. No empty lines. Easy to do things like lookup, pivot table and also works well with excel's power query. </li> </ul>"},{"location":"#built-from","title":"Built From","text":"<p>SimplyOutput is built using Python with some excelent libraries available:</p> <ul> <li>Typer , packaging the commands into CLI application</li> <li>XlsxWriter, writing the extracted info into excel file</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>No installation required, simply unzip the exe file into your preferred location. Then there are two ways to call it:</p> <ul> <li> <p>Best is to add the location of where you put the exe file into your User/System PATH Environmental variable. This will make SimplyOutput can be called from anywhere, without having to put the full path of where you put it.</p> <p><pre><code>simplyoutput \n</code></pre> * Or if you don't have access to your windows PATH Environmental variable, you can just simply call it using its full location path</p> <pre><code>C:\\where\\you\\put\\it\\simplyoutput </code></pre> </li> </ul>"},{"location":"#how-to-use","title":"How to Use","text":"<p>There are two ways to use it:</p> <ul> <li> <p>Simply calling it. It will prompt you to put the command that you want to do. To get the list of available commands you can do as below:</p> <p><pre><code>simplyoutput --help\n</code></pre> This will list all the available commands. Using '--help' also can be added after each available command to see more detail on what is the command about and what it requires.  For example, you want to extract pile head forces from SESAM's SPLICE <pre><code>simplyoutput splice-getforcedisp --help\n</code></pre> and it will show <pre><code>Usage: simplyoutput splice-getforcedisp [OPTIONS] SPLICEOUTPUTNAME SELECTION EXCELNAME\n\nPile Head force / disp. from SPLICE.LIS to Excel file\n\nArguments:\nSPLICEOUTPUTNAME  File name to read including extension  [required]\nSELECTION         \"d\" for displacement \"f\" for pile head force  [required]\nEXCELNAME         Excel file name, including the extension  [required]\n\nOptions:\n--lookupcol TEXT  Column numbers to create lookup id, 0 is the first column,\n                must be defined inside quotes \" \"\n--help            Show this message and exit.\n</code></pre> For this example, to extract the pile head force, you have to provides minimum 3 arguments: the splice file name (SPLICEOUTPUTNAME), (SELECTION) and the excel name (EXCELNAME). Therefore: <pre><code>simplyoutput splice-getforcedisp SPLICE.LIS f PileHeadForce.xlsx\n</code></pre></p> </li> <li> <p>Second way is to create batch file. Especially if you already know what to do, and know what command to use. Just create a text file containing the command above and save it as <code>.bat</code> file. </p> </li> </ul> <p>The later is very convenient to use, you can just double click the batch file when you need to run it again. </p>"},{"location":"#list-of-supported-output-files","title":"List of Supported Output Files","text":"<p>Below are the supported output files than can be extracted using simplyoutput:</p>"},{"location":"#dnvs-sesam","title":"DNV's SESAM","text":"<ul> <li><code>genie-getmemberforce</code> Member forces from GeniE text2 output.</li> <li><code>genie-getnodedisplacement</code> Node displacement from GeniE text2 output.</li> <li><code>genie-getreaction</code> Support reaction from GeniE text2 output.</li> <li><code>sestra8-loadsum</code> Load summary from SESTRA 8 output file. </li> <li><code>sestra10-loadsum</code> Load summary from SESTRA 10 output file. </li> <li><code>splice-getforcedisp</code> Pile head force and displacement from SPILCE output file. </li> <li><code>framework-getmemcodecheck</code> Framework's ISO member check FULL print. </li> <li><code>framework-getmemcheck360</code> Framework's AISC 360 member check FULL Print.</li> <li><code>framework-getconecheckapi</code> Framework's API cone check FULL print.</li> <li><code>framework-getfatresjoint</code> Framework's joint fatigue result. </li> <li><code>framework-getjointcheckiso</code> Framework's ISO joint check FULL print. </li> <li><code>wajac-maxbsotm</code> Wajac's baseshear and overturning moment.</li> </ul>"},{"location":"#bentlets-sacs","title":"Bentlet's SACS","text":"<ul> <li><code>sacslst-getloadsum</code> Load summary from SACS list file. </li> <li><code>sacslst-getmemcodecheck</code> Member code check results from SACS list file. </li> <li><code>jcnlst-getjointcheck</code> Joint check results from SACS list file. </li> <li><code>psilst-getpileheadforce</code> Pile head force from SACS list file. </li> <li><code>precede-getjointdisp</code> Joint displacement from PRECEDE output. </li> <li><code>precede-getmemendforce</code> Member end force from PRECEDE output. </li> </ul>"},{"location":"commands/SACS/","title":"SACS","text":""},{"location":"commands/SACS/#sacslst-getloadsum","title":"sacslst-getloadsum","text":"<p>This command is to extract load summary from \"lst\" file normally generated after running an analysis. This takes load summary reported in basic load case, load combination and load centre tables. Additional table combining between basic load cases and combined load cases is added in the generated excel file. Please note that the extraction is unit agnostic. User must check the unit used.  </p> <pre><code>simplyoutput sacslst-getloadsum saclstname excelfilename\n</code></pre> <ul> <li><code>saclstname</code> SACS lst file, normaly saclst.xxx or psilst.xxx [Required]</li> <li><code>excelname</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> </ul> <p>Versions Tested</p> <p>SACS 15.0 SACS 16.0</p>"},{"location":"commands/SACS/#sacslst-getmemcodecheck","title":"sacslst-getmemcodecheck","text":"<p>This command is to extract member code check results under the <code>ELEMENT STRESS REPORT AT MAXIMUM UNITY CHECK</code> table from <code>lst</code> file.</p> <pre><code>simplyoutput sacslst-getmemcodecheck saclstname excelfilename\n</code></pre> <ul> <li><code>saclstname</code> SACS lst file, normaly saclst.xxx or psilst.xxx [Required]</li> <li><code>excelname</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> </ul> <p>Versions Tested</p> <p>SACS 15.0 SACS 16.0</p>"},{"location":"commands/SACS/#psilst-getpileheadforce","title":"psilst-getpileheadforce","text":"<p>This command is to extract pile head forces and displacements from <code>* * *  P I L E  M A X I M U M  U N I T Y  C H E C K  S U M M A R Y  * * *</code> table. </p> <pre><code>simplyoutput psilst-getpileheadforce saclstname excelfilename\n</code></pre> <ul> <li><code>saclstname</code> SACS lst file, normaly saclst.xxx or psilst.xxx [Required]</li> <li><code>excelname</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> </ul> <p>Versions Tested</p> <p>SACS 16.0</p>"},{"location":"commands/SACS/#jcnlst-getjointcheck","title":"jcnlst-getjointcheck","text":"<p>This command is to extract joint check results from 3 tables (member strength, joint can summary and load path report). This command can extract results from <code>saclst</code> and <code>jcnlst</code> files. * <code>* * *  M E M B E R   S T R E N G T H   J O I N T   A N A L Y S I S  * * *</code> * <code>* * * J O I N T   C A N   S U M M A R Y * * *</code> * <code>L O A D  P A T H  R E P O R T</code></p> <pre><code>simplyoutput jcnlst-getjointcheck saclstname excelfilename\n</code></pre> <ul> <li><code>saclstname</code> SACS lst file, normaly saclst.xxx or psilst.xxx or jcnlst.xxx [Required]</li> <li><code>excelname</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> </ul> <p>Versions Tested</p> <p>SACS 16.0</p>"},{"location":"commands/SACS/#precede-getjointdisp","title":"precede-getjointdisp","text":"<p>This command is to extract joint displacement report generated by PRECEDE. </p> <pre><code>simplyoutput precede-getjointdisp precedeoutput excelfilename\n</code></pre> <ul> <li><code>precedeoutput</code> txt file from precede [Required]</li> <li><code>excelname</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> </ul> <p>Versions Tested</p> <p>SACS 15.0</p>"},{"location":"commands/SACS/#precede-getmemendforce","title":"precede-getmemendforce","text":"<p>This command is to extract member end forces report generated by PRECEDE. </p> <pre><code>simplyoutput precede-getmemendforce precedeoutput excelfilename\n</code></pre> <ul> <li><code>precedeoutput</code> txt file from precede [Required]</li> <li><code>excelname</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> </ul> <p>Versions Tested</p> <p>SACS 15.0</p>"},{"location":"commands/SESAM/","title":"SESAM","text":""},{"location":"commands/SESAM/#sestra10-loadsum","title":"sestra10-loadsum","text":"<p>This command is to extract load summary from lis file (normaly SESTRA.LIS) generated by SESTRA 10. The result cases table is also extracted.</p> <pre><code>simplyoutput sestra10-loadsum sestrafilename excelfilename\n</code></pre> <ul> <li><code>sestrafilename</code> sestra lis file, normaly SESTRA.LIS [Required]</li> <li><code>excelname</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> </ul> <p>Versions Tested</p> <p>SESTRA 10.12.0.144</p>"},{"location":"commands/SESAM/#sestra8-loadsum","title":"sestra8-loadsum","text":"<p>This command is to extract load summary from lis file (normaly sestrared.LIS) generated by SESTRA 8. </p> <pre><code>simplyoutput sestra8-loadsum sestrafilename excelfilename\n</code></pre> <ul> <li><code>sestrafilename</code> sestra lis file, normaly sestrared.LIS [Required]</li> <li><code>excelname</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> </ul> <p>Versions Tested</p> <p>SESTRA 8.8-02</p>"},{"location":"commands/SESAM/#framework-getconecheckapi","title":"framework-getconecheckapi","text":"<p>This command is to extract ISO's cone check results from FRAMEWORK print out.</p> <pre><code>simplyoutput framework-getconecheckapi frameworkoutputname excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>frameworkoutputname</code> FRAMEWORK output file containing the cone check results [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0.  </li> </ul> <p>The FRAMEWORK output file must be generated with the following commands. <pre><code>PUT THE FRAMEWORK COMMANDS HERE\n</code></pre></p> <p>Versions Tested</p> <p>FRAMEWORK X.XXX.XX</p>"},{"location":"commands/SESAM/#framework-getfatresjoint","title":"framework-getfatresjoint","text":"<p>This command is to extract joint fatigue result generated by FRAMEWORK. The FRAMEWORK printout  must be generated in LANDSCAPE format, and JOINT based. </p> <pre><code>simplyoutput fframework-getfatresjoint frameworkoutputname excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>frameworkoutputname</code> FRAMEWORK output file containing the joint fatigue results [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0. </li> </ul> <p>The FRAMEWORK output file must be generated with the following commands. <pre><code>PUT THE FRAMEWORK COMMANDS HERE\n</code></pre></p> <p>Versions Tested</p> <p>FRAMEWORK X.XXX.XX</p>"},{"location":"commands/SESAM/#framework-getjointcheckiso","title":"framework-getjointcheckiso","text":"<p>This command is to extract FRAMEWORK's ISO joint check result printout. The FRAMEWORK printout  must be generated in LANDSCAPE format, and JOINT based.  </p> <pre><code>simplyoutput framework-getjointcheckiso frameworkoutputname excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>frameworkoutputname</code> FRAMEWORK output file containing the ISO joint check results [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0. </li> </ul> <p>The FRAMEWORK output file must be generated with the following commands. <pre><code>PUT THE FRAMEWORK COMMANDS HERE\n</code></pre></p> <p>Versions Tested</p> <p>FRAMEWORK X.XXX.XX</p>"},{"location":"commands/SESAM/#framework-getmemcheck360","title":"framework-getmemcheck360","text":"<p>This command is to extract FRAMEWORK AISC 360 LRFD member code check result printout. The printout must be generated in LANDSCAPE format and using FULL printout option. </p> <pre><code>simplyoutput framework-getmemcheck360 frameworkoutputname excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>frameworkoutputname</code> FRAMEWORK output file containing the AISC 360 LRFD member check results [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0. </li> </ul> <p>The FRAMEWORK output file must be generated with the following commands. <pre><code>PUT THE FRAMEWORK COMMANDS HERE\n</code></pre></p> <p>Versions Tested</p> <p>FRAMEWORK X.XXX.XX</p>"},{"location":"commands/SESAM/#framework-getmemcodecheck","title":"framework-getmemcodecheck","text":"<p>This command is to extract FRAMEWORK ISO member code check result printout. The printout must be generated in LANDSCAPE format and using FULL printout option. </p> <pre><code>simplyoutput framework-getmemcodecheck frameworkoutputname excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>frameworkoutputname</code> FRAMEWORK output file containing the ISO member code results [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0. </li> </ul> <p>The FRAMEWORK output file must be generated with the following commands. <pre><code>PUT THE FRAMEWORK COMMANDS HERE\n</code></pre></p> <p>Versions Tested</p> <p>FRAMEWORK X.XXX.XX</p>"},{"location":"commands/SESAM/#genie-getmemberforce","title":"genie-getmemberforce","text":"<p>This command is to extract member forces printed from GeniE report using <code>text2</code> format. </p> <pre><code>simplyoutput genie-getmemberforce geniereportfilename excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>geniereportfilename</code> Genie report printout file containing the member force result [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0. </li> </ul> <p>The GeniE report printout file must be generated with the following commands.</p> <pre><code>GeniEReporting.saveAs(\"MemberForces.txt\", text2);\n</code></pre> <p>Versions Tested</p> <p>GeniE V8.2-04</p>"},{"location":"commands/SESAM/#genie-getnodedisplacement","title":"genie-getnodedisplacement","text":"<p>This command is to extract node displacement printed from GeniE report using <code>text2</code> format. </p> <pre><code>simplyoutput genie-getnodedisplacement geniereportfilename excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>geniereportfilename</code> Genie report printout file containing node displacements [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0. </li> </ul> <p>The GeniE report printout file must be generated with the following commands.</p> <pre><code>GeniEReporting.saveAs(\"NodeDisp.txt\", text2);\n</code></pre> <p>Versions Tested</p> <p>GeniE V8.2-04</p>"},{"location":"commands/SESAM/#genie-getreaction","title":"genie-getreaction","text":"<p>This command is to extract support reaction printed from GeniE report using <code>text2</code> format. </p> <pre><code>simplyoutput genie-getreaction geniereportfilename excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>geniereportfilename</code> Genie report printout file containing support reactions [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0. </li> </ul> <p>The GeniE report printout file must be generated with the following commands.</p> <pre><code>GeniEReporting.saveAs(\"SuppReact.txt\", text2);\n</code></pre> <p>Versions Tested</p> <p>GeniE V8.2-04</p>"},{"location":"commands/SESAM/#splice-getforcedisp","title":"splice-getforcedisp","text":"<p>This command is to extract pile head force and displacement generated by SPLICE, normally in <code>splice.lis</code> file. </p> <pre><code>simplyoutput splice-getforcedisp spliceoutputfile excelfilename --lookupid \"A B\"\n</code></pre> <ul> <li><code>spliceoutputfile</code> Splice output file, normally <code>splice.lis</code> [Required]</li> <li><code>excelfilename</code> name of the excel file that is going to be generated, <code>.xlsx</code> file type must be included in the name [Required]</li> <li><code>--lookupid \"A B\"</code> Additional command to create additional column from a combination of 2 or more of the existing columns. For example, creating additional column that is made from first column and third column, then put <code>--lookupid \"0 2\"</code>. Note that first column is column 0. </li> </ul> <p>Versions Tested</p> <p>SPLICE 7.4-00</p>"},{"location":"home/","title":"SimplyOutput","text":"<p>SimplyOutput is a lightweight utility tool for structural engineers in extracting output files generated by structural analysis softwares, into simple flat table format in excel format. Making the output easier for the engineers to further process it (e.g., sort, pivot, finding max min, grouping, even putting it neatly in the report). Mainly used to accompany structural analysis software such as Bentley's SACS and DNV's SESAM packages. </p> <p>Some of the key features are:</p> <ul> <li>Easy to Use: Simply command line interface (CLI). Can be written as a batch file, and tied to the structural analysis run stream. </li> <li>Flat Table: Everything is converted into excel flat table. No empty lines. Easy to do things like lookup, pivot table and also works well with excel's power query. </li> </ul>"},{"location":"home/#built-from","title":"Built From","text":"<p>SimplyOutput is built using Python with some excelent libraries available:</p> <ul> <li>Typer , packaging the commands into CLI application</li> <li>XlsxWriter, writing the extracted info into excel file</li> </ul>"},{"location":"home/#installation","title":"Installation","text":"<p>No installation required, simply unzip the exe file into your preferred location. Then there are two ways to call it:</p> <ul> <li> <p>Best is to add the location of where you put the exe file into your User/System PATH Environmental variable. This will make SimplyOutput can be called from anywhere, without having to put the full path of where you put it.</p> <p><pre><code>simplyoutput \n</code></pre> * Or if you don't have access to your windows PATH Environmental variable, you can just simply call it using its full location path</p> <pre><code>C:\\where\\you\\put\\it\\simplyoutput </code></pre> </li> </ul>"},{"location":"home/#how-to-use","title":"How to Use","text":"<p>There are two ways to use it:</p> <ul> <li> <p>Simply calling it. It will prompt you to put the command that you want to do. To get the list of available commands you can do as below:</p> <p><pre><code>simplyoutput --help\n</code></pre> This will list all the available commands. Using '--help' also can be added after each available command to see more detail on what is the command about and what it requires.  For example, you want to extract pile head forces from SESAM's SPLICE <pre><code>simplyoutput splice-getforcedisp --help\n</code></pre> and it will show <pre><code>Usage: simplyoutput splice-getforcedisp [OPTIONS] SPLICEOUTPUTNAME SELECTION EXCELNAME\n\nPile Head force / disp. from SPLICE.LIS to Excel file\n\nArguments:\nSPLICEOUTPUTNAME  File name to read including extension  [required]\nSELECTION         \"d\" for displacement \"f\" for pile head force  [required]\nEXCELNAME         Excel file name, including the extension  [required]\n\nOptions:\n--lookupcol TEXT  Column numbers to create lookup id, 0 is the first column,\n                must be defined inside quotes \" \"\n--help            Show this message and exit.\n</code></pre> For this example, to extract the pile head force, you have to provides minimum 3 arguments: the splice file name (SPLICEOUTPUTNAME), (SELECTION) and the excel name (EXCELNAME). Therefore: <pre><code>simplyoutput splice-getforcedisp SPLICE.LIS f PileHeadForce.xlsx\n</code></pre></p> </li> <li> <p>Second way is to create batch file. Especially if you already know what to do, and know what command to use. Just create a text file containing the command above and save it as <code>.bat</code> file. </p> </li> </ul> <p>The later is very convenient to use, you can just double click the batch file when you need to run it again. </p>"},{"location":"home/#list-of-supported-output-files","title":"List of Supported Output Files","text":"<p>Below are the supported output files than can be extracted using simplyoutput:</p>"},{"location":"home/#dnvs-sesam","title":"DNV's SESAM","text":"<ul> <li><code>genie-getmemberforce</code> Member forces from GeniE text2 output.</li> <li><code>genie-getnodedisplacement</code> Node displacement from GeniE text2 output.</li> <li><code>genie-getreaction</code> Support reaction from GeniE text2 output.</li> <li><code>sestra8-loadsum</code> Load summary from SESTRA 8 output file. </li> <li><code>sestra10-loadsum</code> Load summary from SESTRA 10 output file. </li> <li><code>splice-getforcedisp</code> Pile head force and displacement from SPILCE output file. </li> <li><code>framework-getmemcodecheck</code> Framework's ISO member check FULL print. </li> <li><code>framework-getmemcheck360</code> Framework's AISC 360 member check FULL Print.</li> <li><code>framework-getconecheckapi</code> Framework's API cone check FULL print.</li> <li><code>framework-getfatresjoint</code> Framework's joint fatigue result. </li> <li><code>framework-getjointcheckiso</code> Framework's ISO joint check FULL print. </li> <li><code>wajac-maxbsotm</code> Wajac's baseshear and overturning moment.</li> </ul>"},{"location":"home/#bentlets-sacs","title":"Bentlet's SACS","text":"<ul> <li><code>sacslst-getloadsum</code> Load summary from SACS list file. </li> <li><code>sacslst-getmemcodecheck</code> Member code check results from SACS list file. </li> <li><code>jcnlst-getjointcheck</code> Joint check results from SACS list file. </li> <li><code>psilst-getpileheadforce</code> Pile head force from SACS list file. </li> <li><code>precede-getjointdisp</code> Joint displacement from PRECEDE output. </li> <li><code>precede-getmemendforce</code> Member end force from PRECEDE output. </li> </ul>"}]}